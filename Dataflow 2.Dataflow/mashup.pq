[StagingDefinition = [Kind = "FastCopy"]]
section Section1;
shared School_Level_Data_GIAS_Data = let
  Source = Lakehouse.Contents(null),
  Navigation = Source{[workspaceId = "00e8e364-022f-45ca-8e66-a809f10dafcd"]}[Data],
  #"Navigation 1" = Navigation{[lakehouseId = "fc0e23ae-4565-4652-aa94-d5a96ea04b74"]}[Data],
  #"Navigation 2" = #"Navigation 1"{[Id = "School_Level_Data_GIAS_Data", ItemKind = "Table"]}[Data],
  #"Removed columns" = Table.RemoveColumns(#"Navigation 2", {"LA__code_", "LA__name_", "EstablishmentNumber", "DFE_Number", "EstablishmentName", "Rationalised_School_Type", "TypeOfEstablishment__name_", "EstablishmentTypeGroup__name_", "EstablishmentStatus__name_", "ReasonEstablishmentOpened__name_", "OpenDate", "ReasonEstablishmentClosed__name_", "CloseDate", "PhaseOfEducation__name_", "StatutoryLowAge", "StatutoryHighAge", "Boarders__name_", "NurseryProvision__name_", "OfficialSixthForm__name_", "Gender__name_", "ReligiousCharacter__name_", "ReligiousEthos__name_", "Diocese__name_", "AdmissionsPolicy__name_", "SchoolCapacity", "SpecialClasses__name_", "CensusDate", "NumberOfPupils", "NumberOfBoys", "NumberOfGirls", "PercentageFSM", "TrustSchoolFlag__name_", "Trusts__name_", "SchoolSponsorFlag__name_", "SchoolSponsors__name_", "FederationFlag__name_", "Federations__name_", "UKPRN", "FEHEIdentifier", "FurtherEducationType__name_", "LastChangedDate", "Street", "Locality", "Address3", "Town", "County__name_", "Postcode", "SchoolWebsite", "TelephoneNum", "HeadTitle__name_", "HeadFirstName", "HeadLastName", "HeadPreferredJobTitle", "BSOInspectorateName__name_", "InspectorateReport", "DateOfLastInspectionVisit", "NextInspectionVisit", "TeenMoth__name_", "TeenMothPlaces", "CCF__name_", "SENPRU__name_", "EBD__name_", "PlacesPRU", "FTProv__name_", "EdByOther__name_", "Section41Approved__name_", "SEN1__name_", "SEN2__name_", "SEN3__name_", "SEN4__name_", "SEN5__name_", "SEN6__name_", "SEN7__name_", "SEN8__name_", "SEN9__name_", "SEN10__name_", "SEN11__name_", "SEN12__name_", "SEN13__name_", "TypeOfResourcedProvision__name_", "ResourcedProvisionOnRoll", "ResourcedProvisionCapacity", "SenUnitOnRoll", "SenUnitCapacity", "GOR__name_", "DistrictAdministrative__name_", "AdministrativeWard__name_", "ParliamentaryConstituency__name_", "UrbanRural__name_", "GSSLACode__name_", "Easting", "Northing", "MSOA__name_", "LSOA__name_", "InspectorateName__name_", "SENStat", "SENNoStat", "PropsName", "Country__name_", "UPRN", "SiteName", "QABName__name_", "EstablishmentAccredited__name_", "QABReport", "CHNumber", "MSOA__code_", "LSOA__code_", "FSM", "AccreditationExpiryDate", "Linked_establishments", "Link_2", "Link_3", "Link_4", "Link_5", "Link_6", "Link_7", "Link_8", "Link_9", "Link_10", "Link_11", "Link_12", "Order", "Curated_Infant_Link_URN", "Web_link", "Inspection_start_date", "Publication_date", "Overall_effectiveness", "Category_of_concern", "Quality_of_education", "Behaviour_and_attitudes", "Personal_development", "Effectiveness_of_leadership_and_management", "Safeguarding_is_effective?", "Early_years_provision__where_applicable_", "Sixth_form_provision__where_applicable_", "Previous_inspection_start_date", "Previous_publication_date", "Previous_graded_inspection_overall_effectiveness", "Previous_category_of_concern", "Previous_quality_of_education", "Previous_behaviour_and_attitudes", "Previous_personal_development", "Previous_effectiveness_of_leadership_and_management", "Previous_safeguarding_is_effective?", "Previous_early_years_provision__where_applicable_", "Previous_sixth_form_provision__where_applicable_", "Overall_effectiveness_Definition", "Quality_of_education_Definition", "Behaviour_and_attitudes_Definition", "Personal_development_Definition", "Effectiveness_of_leadership_and_management_Definition", "Safeguarding_is_effective?_Definition", "Early_years_provision__where_applicable__Definiton", "Sixth_form_provision__where_applicable__Definition", "Previous_overall_effectiveness_Definition", "Previous_quality_of_education_Definition", "Previous_behaviour_and_attitudes_Definition", "Previous_personal_development_Definition", "Previous_effectiveness_of_leadership_and_management_Definition", "Previous_safeguarding_is_effective?_Definition", "Previous_early_years_provision__where_applicable__Definiton", "Previous_sixth_form_provision__where_applicable__Definition", "xcoord", "ycoord"}),
  #"Removed duplicates" = Table.Distinct(#"Removed columns", {"URN", "Planning_Area_Code", "Name", "Nr_of_Schools_in_PA", "PA_Phase"}),
  #"Filtered rows" = Table.SelectRows(#"Removed duplicates", each ([PA_Phase] <> "N/A") and ([Planning_Area_Code] <> null and [Planning_Area_Code] <> "")),
  #"Merged queries" = Table.NestedJoin(#"Filtered rows", {"URN"}, School_Level_Data_Historic_Actual_and_Projection_NoR, {"URN"}, "School_Level_Data_Historic_Actual_and_Projection_NoR", JoinKind.LeftOuter),
  #"Expanded School_Level_Data_Historic_Actual_and_Projection_NoR" = Table.ExpandTableColumn(#"Merged queries", "School_Level_Data_Historic_Actual_and_Projection_NoR", {"Year", "Yr_Group", "Pupils", "Actual/Projection/Historic"}, {"Year", "Yr_Group", "Pupils", "Actual/Projection/Historic"}),
  #"Filtered rows 4" = Table.SelectRows(#"Expanded School_Level_Data_Historic_Actual_and_Projection_NoR", each ([#"Actual/Projection/Historic"] <> "Historic")),
  #"Sorted rows 6" = Table.Sort(#"Filtered rows 4", {{"URN", Order.Ascending}, {"Year", Order.Ascending}, {"Yr_Group", Order.Ascending}}),
  #"Sorted rows" = Table.Sort(#"Sorted rows 6", {{"URN", Order.Ascending}, {"Year", Order.Ascending}, {"Yr_Group", Order.Ascending}}),
  #"Removed columns 1" = Table.RemoveColumns(#"Sorted rows", {"Nr_of_Schools_in_PA"}),
  #"Removed duplicates 1" = Table.Distinct(#"Removed columns 1", {"URN", "Planning_Area_Code", "Name", "PA_Phase", "Year", "Yr_Group", "Pupils", "Actual/Projection/Historic"}),
  #"Grouped rows" = Table.Group(#"Removed duplicates 1", {"Planning_Area_Code", "PA_Phase", "Year", "Yr_Group", "Actual/Projection/Historic"}, {{"Count", each List.Sum([Pupils]), type nullable number}}),
  #"Sorted rows 1" = Table.Sort(#"Grouped rows", {{"Year", Order.Ascending}, {"Yr_Group", Order.Ascending}}),
  #"Changed column type" = Table.TransformColumnTypes(#"Sorted rows 1", {{"Year", Int64.Type}}),
  #"Merged queries 1" = Table.NestedJoin(#"Changed column type", {"Planning_Area_Code", "Year", "Yr_Group"}, #"TEST_BB_NOR_PAN_Planning Areas", {"planning_area_code", "time_period", "nc_year_group"}, "TEST_BB_NOR_PAN_Planning Areas", JoinKind.LeftOuter),
  #"Expanded TEST_BB_NOR_PAN_Planning Areas" = Table.ExpandTableColumn(#"Merged queries 1", "TEST_BB_NOR_PAN_Planning Areas", {"nc_year_group", "pupil_forecast_and_202324_actuals", "EY NOR Multiplier", "Curated_Projected_NOR"}, {"nc_year_group", "pupil_forecast_and_202324_actuals", "EY NOR Multiplier", "Curated_Projected_NOR"}),
  #"Added custom" = Table.TransformColumnTypes(Table.AddColumn(#"Expanded TEST_BB_NOR_PAN_Planning Areas", "Difference", each [Count] - [Curated_Projected_NOR]), {{"Difference", Int64.Type}}),
  #"Sorted rows 2" = Table.Sort(#"Added custom", {{"Planning_Area_Code", Order.Ascending}, {"Year", Order.Ascending}, {"Yr_Group", Order.Ascending}}),
  #"Renamed columns" = Table.RenameColumns(#"Sorted rows 2", {{"Curated_Projected_NOR", "Numbers from PA Projections"}, {"Count", "Numbers from School Level Projections"}}),
  #"Filtered rows 2" = Table.SelectRows(#"Renamed columns", each ([Difference] <> null and [Difference] <> 0) and ([Year] <> 202829 and [Year] <> 202930)),
  #"Sorted rows 3" = Table.Sort(#"Filtered rows 2", {{"Difference", Order.Descending}, {"Planning_Area_Code", Order.Ascending}, {"Year", Order.Ascending}, {"Yr_Group", Order.Ascending}}),
  #"Added custom 1" = Table.TransformColumnTypes(Table.AddColumn(#"Sorted rows 3", "Percentage Difference", each if [Numbers from PA Projections] = 0 or [Numbers from PA Projections] = null then 0 else ([Numbers from School Level Projections]-[Numbers from PA Projections])/[Numbers from PA Projections]), {{"Percentage Difference", Percentage.Type}}),
  #"Sorted rows 5" = Table.Sort(#"Added custom 1", {{"Percentage Difference", Order.Ascending}}),
  #"Reordered columns" = Table.ReorderColumns(#"Sorted rows 5", {"Planning_Area_Code", "PA_Phase", "Year", "Yr_Group", "Actual/Projection/Historic", "nc_year_group", "Numbers from PA Projections", "Numbers from School Level Projections", "pupil_forecast_and_202324_actuals", "EY NOR Multiplier", "Difference", "Percentage Difference"}),
  #"Removed columns 2" = Table.RemoveColumns(#"Reordered columns", {"pupil_forecast_and_202324_actuals", "EY NOR Multiplier"}),
  #"Filtered rows 7" = Table.SelectRows(#"Removed columns 2", each ([#"Actual/Projection/Historic"] = "Projections")),
  #"Added custom 2" = Table.TransformColumnTypes(Table.AddColumn(#"Filtered rows 7", "Adjustment Column", each [Numbers from PA Projections] / [Percentage Difference]), {{"Adjustment Column", Int64.Type}}),
  #"Removed columns 3" = Table.RemoveColumns(#"Added custom 2", {"Adjustment Column"}),
  #"Changed column type 1" = Table.TransformColumnTypes(#"Removed columns 3", {{"Percentage Difference", Percentage.Type}}),
  #"Filtered rows 1" = Table.SelectRows(#"Changed column type 1", each [Planning_Area_Code] = "8251003"),
  #"Sorted rows 8" = Table.Sort(#"Filtered rows 1", {{"Year", Order.Ascending}, {"Yr_Group", Order.Ascending}}),
  #"Grouped rows 2" = Table.Group(#"Sorted rows 8", {"Planning_Area_Code"}, {{"Count", each Table.RowCount(_), Int64.Type}}),
  #"Sorted rows 7" = Table.Sort(#"Grouped rows 2", {{"Count", Order.Descending}}),
  #"Grouped rows 1" = Table.Group(#"Sorted rows 7", {"Actual/Projection/Historic", "Year", "PA_Phase", "Planning_Area_Code"}, {{"Numbers from School Level Projections", each List.Sum([Numbers from School Level Projections]), type nullable number}, {"pupil_forecast", each List.Sum([pupil_forecast_and_202324_actuals]), type nullable number}, {"Numbers from PA Projections", each List.Sum([Numbers from PA Projections]), type nullable number}, {"Difference", each List.Sum([Difference]), type nullable number}}),
  #"Sorted rows 4" = Table.Sort(#"Grouped rows 1", {{"Difference", Order.Ascending}}),
  #"Filtered rows 3" = Table.SelectRows(#"Sorted rows 4", each ([Difference] <> 0)),
  #"Filtered rows 5" = Table.SelectRows(#"Filtered rows 3", each [Planning_Area_Code] = "8861311"),
  #"Filtered rows 6" = Table.SelectRows(#"Filtered rows 5", each ([Yr_Group] = "Yr 07"))
in
  #"Filtered rows 6";
shared School_Level_Data_Historic_Actual_and_Projection_NoR = let
  Source = Lakehouse.Contents(null),
  Navigation = Source{[workspaceId = "00e8e364-022f-45ca-8e66-a809f10dafcd"]}[Data],
  #"Navigation 1" = Navigation{[lakehouseId = "fc0e23ae-4565-4652-aa94-d5a96ea04b74"]}[Data],
  #"Navigation 2" = #"Navigation 1"{[Id = "School_Level_Data_Historic_Actual_and_Projection_NoR", ItemKind = "Table"]}[Data],
  #"Filtered rows" = Table.SelectRows(#"Navigation 2", each ([Yr_Group] <> "Early Years Total" and [Yr_Group] <> "EY 1" and [Yr_Group] <> "EY 2" and [Yr_Group] <> "N 1" and [Yr_Group] <> "N 2" and [Yr_Group] <> "Post 16 Total" and [Yr_Group] <> "Primary Total" and [Yr_Group] <> "Secondary Total" and [Yr_Group] <> "Total" and [Yr_Group] <> "Yr 14"))
in
  #"Filtered rows";
shared PAN_NOR_BB_Planning_Area_Pupil_Numbers = let
  Source = Lakehouse.Contents(null),
  Navigation = Source{[workspaceId = "00e8e364-022f-45ca-8e66-a809f10dafcd"]}[Data],
  #"Navigation 1" = Navigation{[lakehouseId = "fc0e23ae-4565-4652-aa94-d5a96ea04b74"]}[Data],
  #"Navigation 2" = #"Navigation 1"{[Id = "PAN_NOR_BB_Planning_Area_Pupil_Numbers", ItemKind = "Table"]}[Data],
  #"Removed columns" = Table.RemoveColumns(#"Navigation 2", {"Curated_PAN", "Primary_BB103/104_Capacity", "Secondary_BB103/104_Capacity", "BB103/104 Capacity", "EY NOR Multiplier", "pupil_forecast_and_202324_actuals"})
in
  #"Removed columns";
shared #"TEST_BB_NOR_PAN_Planning Areas" = let
  Source = Lakehouse.Contents(null),
  Navigation = Source{[workspaceId = "00e8e364-022f-45ca-8e66-a809f10dafcd"]}[Data],
  #"Navigation 1" = Navigation{[lakehouseId = "6206f2ff-b8f0-4ed2-bbd1-a7baa4329434"]}[Data],
  #"Navigation 2" = #"Navigation 1"{[Id = "TEST_BB_NOR_PAN_Planning Areas", ItemKind = "Table"]}[Data],
  #"Sorted rows" = Table.Sort(#"Navigation 2", {{"planning_area_code", Order.Ascending}, {"time_period", Order.Ascending}, {"nc_year_group", Order.Ascending}}),
  #"Filtered rows" = Table.SelectRows(#"Sorted rows", each ([nc_year_group] <> "Primary total" and [nc_year_group] <> "Secondary total") and ([planning_area_code] <> null and [planning_area_code] <> "")),
  #"Replaced value" = Table.ReplaceValue(#"Filtered rows", "Year", "Yr", Replacer.ReplaceText, {"nc_year_group"}),
  #"Replaced value 1" = Table.ReplaceValue(#"Replaced value", "Reception", "Yr R", Replacer.ReplaceText, {"nc_year_group"})
in
  #"Replaced value 1";
shared #"School_Level_Data_GIAS_Data (2)" = let
  Source = Lakehouse.Contents(null),
  Navigation = Source{[workspaceId = "00e8e364-022f-45ca-8e66-a809f10dafcd"]}[Data],
  #"Navigation 1" = Navigation{[lakehouseId = "fc0e23ae-4565-4652-aa94-d5a96ea04b74"]}[Data],
  #"Navigation 2" = #"Navigation 1"{[Id = "School_Level_Data_GIAS_Data", ItemKind = "Table"]}[Data],
  #"Removed columns" = Table.RemoveColumns(#"Navigation 2", {"LA__code_", "LA__name_", "EstablishmentNumber", "DFE_Number", "EstablishmentName", "Rationalised_School_Type", "TypeOfEstablishment__name_", "EstablishmentTypeGroup__name_", "EstablishmentStatus__name_", "ReasonEstablishmentOpened__name_", "OpenDate", "ReasonEstablishmentClosed__name_", "CloseDate", "PhaseOfEducation__name_", "StatutoryLowAge", "StatutoryHighAge", "Boarders__name_", "NurseryProvision__name_", "OfficialSixthForm__name_", "Gender__name_", "ReligiousCharacter__name_", "ReligiousEthos__name_", "Diocese__name_", "AdmissionsPolicy__name_", "SchoolCapacity", "SpecialClasses__name_", "CensusDate", "NumberOfPupils", "NumberOfBoys", "NumberOfGirls", "PercentageFSM", "TrustSchoolFlag__name_", "Trusts__name_", "SchoolSponsorFlag__name_", "SchoolSponsors__name_", "FederationFlag__name_", "Federations__name_", "UKPRN", "FEHEIdentifier", "FurtherEducationType__name_", "LastChangedDate", "Street", "Locality", "Address3", "Town", "County__name_", "Postcode", "SchoolWebsite", "TelephoneNum", "HeadTitle__name_", "HeadFirstName", "HeadLastName", "HeadPreferredJobTitle", "BSOInspectorateName__name_", "InspectorateReport", "DateOfLastInspectionVisit", "NextInspectionVisit", "TeenMoth__name_", "TeenMothPlaces", "CCF__name_", "SENPRU__name_", "EBD__name_", "PlacesPRU", "FTProv__name_", "EdByOther__name_", "Section41Approved__name_", "SEN1__name_", "SEN2__name_", "SEN3__name_", "SEN4__name_", "SEN5__name_", "SEN6__name_", "SEN7__name_", "SEN8__name_", "SEN9__name_", "SEN10__name_", "SEN11__name_", "SEN12__name_", "SEN13__name_", "TypeOfResourcedProvision__name_", "ResourcedProvisionOnRoll", "ResourcedProvisionCapacity", "SenUnitOnRoll", "SenUnitCapacity", "GOR__name_", "DistrictAdministrative__name_", "AdministrativeWard__name_", "ParliamentaryConstituency__name_", "UrbanRural__name_", "GSSLACode__name_", "Easting", "Northing", "MSOA__name_", "LSOA__name_", "InspectorateName__name_", "SENStat", "SENNoStat", "PropsName", "Country__name_", "UPRN", "SiteName", "QABName__name_", "EstablishmentAccredited__name_", "QABReport", "CHNumber", "MSOA__code_", "LSOA__code_", "FSM", "AccreditationExpiryDate", "Linked_establishments", "Link_2", "Link_3", "Link_4", "Link_5", "Link_6", "Link_7", "Link_8", "Link_9", "Link_10", "Link_11", "Link_12", "Order", "Curated_Infant_Link_URN", "Web_link", "Inspection_start_date", "Publication_date", "Overall_effectiveness", "Category_of_concern", "Quality_of_education", "Behaviour_and_attitudes", "Personal_development", "Effectiveness_of_leadership_and_management", "Safeguarding_is_effective?", "Early_years_provision__where_applicable_", "Sixth_form_provision__where_applicable_", "Previous_inspection_start_date", "Previous_publication_date", "Previous_graded_inspection_overall_effectiveness", "Previous_category_of_concern", "Previous_quality_of_education", "Previous_behaviour_and_attitudes", "Previous_personal_development", "Previous_effectiveness_of_leadership_and_management", "Previous_safeguarding_is_effective?", "Previous_early_years_provision__where_applicable_", "Previous_sixth_form_provision__where_applicable_", "Overall_effectiveness_Definition", "Quality_of_education_Definition", "Behaviour_and_attitudes_Definition", "Personal_development_Definition", "Effectiveness_of_leadership_and_management_Definition", "Safeguarding_is_effective?_Definition", "Early_years_provision__where_applicable__Definiton", "Sixth_form_provision__where_applicable__Definition", "Previous_overall_effectiveness_Definition", "Previous_quality_of_education_Definition", "Previous_behaviour_and_attitudes_Definition", "Previous_personal_development_Definition", "Previous_effectiveness_of_leadership_and_management_Definition", "Previous_safeguarding_is_effective?_Definition", "Previous_early_years_provision__where_applicable__Definiton", "Previous_sixth_form_provision__where_applicable__Definition", "xcoord", "ycoord"}),
  #"Removed duplicates" = Table.Distinct(#"Removed columns", {"URN", "Planning_Area_Code", "Name", "Nr_of_Schools_in_PA", "PA_Phase"}),
  #"Filtered rows" = Table.SelectRows(#"Removed duplicates", each ([PA_Phase] <> "N/A") and ([Planning_Area_Code] <> null and [Planning_Area_Code] <> "")),
  #"Merged queries" = Table.NestedJoin(#"Filtered rows", {"URN"}, School_Level_Data_Historic_Actual_and_Projection_NoR, {"URN"}, "School_Level_Data_Historic_Actual_and_Projection_NoR", JoinKind.LeftOuter),
  #"Expanded School_Level_Data_Historic_Actual_and_Projection_NoR" = Table.ExpandTableColumn(#"Merged queries", "School_Level_Data_Historic_Actual_and_Projection_NoR", {"Year", "Yr_Group", "Pupils", "Actual/Projection/Historic"}, {"Year", "Yr_Group", "Pupils", "Actual/Projection/Historic"}),
  #"Filtered rows 4" = Table.SelectRows(#"Expanded School_Level_Data_Historic_Actual_and_Projection_NoR", each ([#"Actual/Projection/Historic"] <> "Historic")),
  #"Sorted rows" = Table.Sort(#"Filtered rows 4", {{"URN", Order.Ascending}, {"Year", Order.Ascending}, {"Yr_Group", Order.Ascending}}),
  #"Removed columns 1" = Table.RemoveColumns(#"Sorted rows", {"Nr_of_Schools_in_PA"}),
  #"Removed duplicates 1" = Table.Distinct(#"Removed columns 1", {"URN", "Planning_Area_Code", "Name", "PA_Phase", "Year", "Yr_Group", "Pupils", "Actual/Projection/Historic"}),
  #"Grouped rows" = Table.Group(#"Removed duplicates 1", {"Planning_Area_Code", "PA_Phase", "Year", "Yr_Group", "Actual/Projection/Historic"}, {{"Count", each List.Sum([Pupils]), type nullable number}}),
  #"Sorted rows 1" = Table.Sort(#"Grouped rows", {{"Year", Order.Ascending}, {"Yr_Group", Order.Ascending}}),
  #"Changed column type" = Table.TransformColumnTypes(#"Sorted rows 1", {{"Year", Int64.Type}}),
  #"Merged queries 1" = Table.NestedJoin(#"Changed column type", {"Planning_Area_Code", "Year", "Yr_Group"}, #"TEST_BB_NOR_PAN_Planning Areas", {"planning_area_code", "time_period", "nc_year_group"}, "TEST_BB_NOR_PAN_Planning Areas", JoinKind.LeftOuter),
  #"Expanded TEST_BB_NOR_PAN_Planning Areas" = Table.ExpandTableColumn(#"Merged queries 1", "TEST_BB_NOR_PAN_Planning Areas", {"nc_year_group", "pupil_forecast_and_202324_actuals", "EY NOR Multiplier", "Curated_Projected_NOR"}, {"nc_year_group", "pupil_forecast_and_202324_actuals", "EY NOR Multiplier", "Curated_Projected_NOR"}),
  #"Added custom" = Table.TransformColumnTypes(Table.AddColumn(#"Expanded TEST_BB_NOR_PAN_Planning Areas", "Difference", each [Count] - [Curated_Projected_NOR]), {{"Difference", Int64.Type}}),
  #"Added custom 2" = Table.AddColumn(#"Added custom", "Custom", each if [Curated_Projected_NOR] = 0 or [Count] = 0 then "No" else "Yes"),
  #"Filtered rows 3" = Table.SelectRows(#"Added custom 2", each ([Difference] <> null and [Difference] <> 0) and ([Custom] = "Yes") and ([#"Actual/Projection/Historic"] = "Projections")),
  #"Filtered rows 1" = Table.SelectRows(#"Filtered rows 3", each ([#"Actual/Projection/Historic"] = "Projections")),
  #"Sorted rows 2" = Table.Sort(#"Filtered rows 1", {{"Planning_Area_Code", Order.Ascending}, {"Year", Order.Ascending}, {"Yr_Group", Order.Ascending}}),
  #"Renamed columns" = Table.RenameColumns(#"Sorted rows 2", {{"Curated_Projected_NOR", "Numbers from PA Projections"}, {"Count", "Numbers from School Level Projections"}}),
  #"Filtered rows 2" = Table.SelectRows(#"Renamed columns", each ([Difference] <> null) and ([Year] <> 202829 and [Year] <> 202930)),
  #"Sorted rows 3" = Table.Sort(#"Filtered rows 2", {{"Difference", Order.Ascending}, {"Planning_Area_Code", Order.Ascending}, {"Year", Order.Ascending}, {"Yr_Group", Order.Ascending}}),
  #"Added custom 1" = Table.TransformColumnTypes(Table.AddColumn(#"Sorted rows 3", "Percentage Difference", each if [Numbers from PA Projections] = 0 or [Numbers from PA Projections] = null then 0 else ([Numbers from School Level Projections]-[Numbers from PA Projections])/[Numbers from PA Projections]), {{"Percentage Difference", Percentage.Type}}),
  #"Rounded off" = Table.TransformColumns(#"Added custom 1", {{"Percentage Difference", each Number.Round(_, 2), type number}}),
  #"Sorted rows 5" = Table.Sort(#"Rounded off", {{"Percentage Difference", Order.Ascending}}),
  #"Grouped rows 1" = Table.Group(#"Sorted rows 5", {"Percentage Difference"}, {{"Count", each Table.RowCount(_), Int64.Type}}),
  #"Sorted rows 4" = Table.Sort(#"Grouped rows 1", {{"Percentage Difference", Order.Ascending}})
in
  #"Sorted rows 4";
shared #"School_Level_Data_GIAS_Data (3)" = let
  Source = Lakehouse.Contents(null),
  Navigation = Source{[workspaceId = "00e8e364-022f-45ca-8e66-a809f10dafcd"]}[Data],
  #"Navigation 1" = Navigation{[lakehouseId = "fc0e23ae-4565-4652-aa94-d5a96ea04b74"]}[Data],
  #"Navigation 2" = #"Navigation 1"{[Id = "School_Level_Data_GIAS_Data", ItemKind = "Table"]}[Data],
  #"Removed columns" = Table.RemoveColumns(#"Navigation 2", {"LA__code_", "LA__name_", "EstablishmentNumber", "DFE_Number", "EstablishmentName", "Rationalised_School_Type", "TypeOfEstablishment__name_", "EstablishmentTypeGroup__name_", "EstablishmentStatus__name_", "ReasonEstablishmentOpened__name_", "OpenDate", "ReasonEstablishmentClosed__name_", "CloseDate", "PhaseOfEducation__name_", "StatutoryLowAge", "StatutoryHighAge", "Boarders__name_", "NurseryProvision__name_", "OfficialSixthForm__name_", "Gender__name_", "ReligiousCharacter__name_", "ReligiousEthos__name_", "Diocese__name_", "AdmissionsPolicy__name_", "SchoolCapacity", "SpecialClasses__name_", "CensusDate", "NumberOfPupils", "NumberOfBoys", "NumberOfGirls", "PercentageFSM", "TrustSchoolFlag__name_", "Trusts__name_", "SchoolSponsorFlag__name_", "SchoolSponsors__name_", "FederationFlag__name_", "Federations__name_", "UKPRN", "FEHEIdentifier", "FurtherEducationType__name_", "LastChangedDate", "Street", "Locality", "Address3", "Town", "County__name_", "Postcode", "SchoolWebsite", "TelephoneNum", "HeadTitle__name_", "HeadFirstName", "HeadLastName", "HeadPreferredJobTitle", "BSOInspectorateName__name_", "InspectorateReport", "DateOfLastInspectionVisit", "NextInspectionVisit", "TeenMoth__name_", "TeenMothPlaces", "CCF__name_", "SENPRU__name_", "EBD__name_", "PlacesPRU", "FTProv__name_", "EdByOther__name_", "Section41Approved__name_", "SEN1__name_", "SEN2__name_", "SEN3__name_", "SEN4__name_", "SEN5__name_", "SEN6__name_", "SEN7__name_", "SEN8__name_", "SEN9__name_", "SEN10__name_", "SEN11__name_", "SEN12__name_", "SEN13__name_", "TypeOfResourcedProvision__name_", "ResourcedProvisionOnRoll", "ResourcedProvisionCapacity", "SenUnitOnRoll", "SenUnitCapacity", "GOR__name_", "DistrictAdministrative__name_", "AdministrativeWard__name_", "ParliamentaryConstituency__name_", "UrbanRural__name_", "GSSLACode__name_", "Easting", "Northing", "MSOA__name_", "LSOA__name_", "InspectorateName__name_", "SENStat", "SENNoStat", "PropsName", "Country__name_", "UPRN", "SiteName", "QABName__name_", "EstablishmentAccredited__name_", "QABReport", "CHNumber", "MSOA__code_", "LSOA__code_", "FSM", "AccreditationExpiryDate", "Linked_establishments", "Link_2", "Link_3", "Link_4", "Link_5", "Link_6", "Link_7", "Link_8", "Link_9", "Link_10", "Link_11", "Link_12", "Order", "Curated_Infant_Link_URN", "Web_link", "Inspection_start_date", "Publication_date", "Overall_effectiveness", "Category_of_concern", "Quality_of_education", "Behaviour_and_attitudes", "Personal_development", "Effectiveness_of_leadership_and_management", "Safeguarding_is_effective?", "Early_years_provision__where_applicable_", "Sixth_form_provision__where_applicable_", "Previous_inspection_start_date", "Previous_publication_date", "Previous_graded_inspection_overall_effectiveness", "Previous_category_of_concern", "Previous_quality_of_education", "Previous_behaviour_and_attitudes", "Previous_personal_development", "Previous_effectiveness_of_leadership_and_management", "Previous_safeguarding_is_effective?", "Previous_early_years_provision__where_applicable_", "Previous_sixth_form_provision__where_applicable_", "Overall_effectiveness_Definition", "Quality_of_education_Definition", "Behaviour_and_attitudes_Definition", "Personal_development_Definition", "Effectiveness_of_leadership_and_management_Definition", "Safeguarding_is_effective?_Definition", "Early_years_provision__where_applicable__Definiton", "Sixth_form_provision__where_applicable__Definition", "Previous_overall_effectiveness_Definition", "Previous_quality_of_education_Definition", "Previous_behaviour_and_attitudes_Definition", "Previous_personal_development_Definition", "Previous_effectiveness_of_leadership_and_management_Definition", "Previous_safeguarding_is_effective?_Definition", "Previous_early_years_provision__where_applicable__Definiton", "Previous_sixth_form_provision__where_applicable__Definition", "xcoord", "ycoord"}),
  #"Removed duplicates" = Table.Distinct(#"Removed columns", {"URN", "Planning_Area_Code", "Name", "Nr_of_Schools_in_PA", "PA_Phase"}),
  #"Filtered rows" = Table.SelectRows(#"Removed duplicates", each ([PA_Phase] <> "N/A") and ([Planning_Area_Code] <> null and [Planning_Area_Code] <> "")),
  #"Merged queries" = Table.NestedJoin(#"Filtered rows", {"URN"}, School_Level_Data_Historic_Actual_and_Projection_NoR, {"URN"}, "School_Level_Data_Historic_Actual_and_Projection_NoR", JoinKind.LeftOuter),
  #"Expanded School_Level_Data_Historic_Actual_and_Projection_NoR" = Table.ExpandTableColumn(#"Merged queries", "School_Level_Data_Historic_Actual_and_Projection_NoR", {"Year", "Yr_Group", "Pupils", "Actual/Projection/Historic"}, {"Year", "Yr_Group", "Pupils", "Actual/Projection/Historic"}),
  #"Filtered rows 4" = Table.SelectRows(#"Expanded School_Level_Data_Historic_Actual_and_Projection_NoR", each ([#"Actual/Projection/Historic"] <> "Historic")),
  #"Sorted rows" = Table.Sort(#"Filtered rows 4", {{"URN", Order.Ascending}, {"Year", Order.Ascending}, {"Yr_Group", Order.Ascending}}),
  #"Removed columns 1" = Table.RemoveColumns(#"Sorted rows", {"Nr_of_Schools_in_PA"}),
  #"Removed duplicates 1" = Table.Distinct(#"Removed columns 1", {"URN", "Planning_Area_Code", "Name", "PA_Phase", "Year", "Yr_Group", "Pupils", "Actual/Projection/Historic"}),
  #"Grouped rows" = Table.Group(#"Removed duplicates 1", {"Planning_Area_Code", "PA_Phase", "Year", "Yr_Group", "Actual/Projection/Historic"}, {{"Count", each List.Sum([Pupils]), type nullable number}}),
  #"Sorted rows 1" = Table.Sort(#"Grouped rows", {{"Year", Order.Ascending}, {"Yr_Group", Order.Ascending}}),
  #"Changed column type" = Table.TransformColumnTypes(#"Sorted rows 1", {{"Year", Int64.Type}}),
  #"Merged queries 1" = Table.NestedJoin(#"Changed column type", {"Planning_Area_Code", "Year", "Yr_Group"}, #"TEST_BB_NOR_PAN_Planning Areas", {"planning_area_code", "time_period", "nc_year_group"}, "TEST_BB_NOR_PAN_Planning Areas", JoinKind.LeftOuter),
  #"Expanded TEST_BB_NOR_PAN_Planning Areas" = Table.ExpandTableColumn(#"Merged queries 1", "TEST_BB_NOR_PAN_Planning Areas", {"nc_year_group", "pupil_forecast_and_202324_actuals", "EY NOR Multiplier", "Curated_Projected_NOR"}, {"nc_year_group", "pupil_forecast_and_202324_actuals", "EY NOR Multiplier", "Curated_Projected_NOR"}),
  #"Added custom" = Table.TransformColumnTypes(Table.AddColumn(#"Expanded TEST_BB_NOR_PAN_Planning Areas", "Difference", each [Count] - [Curated_Projected_NOR]), {{"Difference", Int64.Type}}),
  #"Sorted rows 2" = Table.Sort(#"Added custom", {{"Planning_Area_Code", Order.Ascending}, {"Year", Order.Ascending}, {"Yr_Group", Order.Ascending}}),
  #"Renamed columns" = Table.RenameColumns(#"Sorted rows 2", {{"Curated_Projected_NOR", "Numbers from PA Projections"}, {"Count", "Numbers from School Level Projections"}}),
  #"Filtered rows 2" = Table.SelectRows(#"Renamed columns", each ([Difference] <> null) and ([Year] <> 202829 and [Year] <> 202930)),
  #"Sorted rows 3" = Table.Sort(#"Filtered rows 2", {{"Difference", Order.Ascending}, {"Planning_Area_Code", Order.Ascending}, {"Year", Order.Ascending}, {"Yr_Group", Order.Ascending}}),
  #"Added custom 1" = Table.TransformColumnTypes(Table.AddColumn(#"Sorted rows 3", "Percentage Difference", each if [Numbers from PA Projections] = 0 or [Numbers from PA Projections] = null then 0 else ([Numbers from School Level Projections]-[Numbers from PA Projections])/[Numbers from PA Projections]), {{"Percentage Difference", Percentage.Type}}),
  #"Rounded off" = Table.TransformColumns(#"Added custom 1", {{"Percentage Difference", each Number.Round(_, 2), type number}}),
  #"Sorted rows 5" = Table.Sort(#"Rounded off", {{"Percentage Difference", Order.Ascending}}),
  #"Changed column type 1" = Table.TransformColumnTypes(#"Sorted rows 5", {{"Percentage Difference", Percentage.Type}}),
  #"Grouped rows 1" = Table.Group(#"Changed column type 1", {"Actual/Projection/Historic", "Year", "PA_Phase", "Planning_Area_Code"}, {{"Numbers from School Level Projections", each List.Sum([Numbers from School Level Projections]), type nullable number}, {"pupil_forecast", each List.Sum([pupil_forecast_and_202324_actuals]), type nullable number}, {"Numbers from PA Projections", each List.Sum([Numbers from PA Projections]), type nullable number}, {"Difference", each List.Sum([Difference]), type nullable number}}),
  #"Added custom 2" = Table.TransformColumnTypes(Table.AddColumn(#"Grouped rows 1", "Percentage Difference", each if [Numbers from PA Projections] = 0 or [Numbers from PA Projections] = null then 0 else ([Numbers from School Level Projections]-[Numbers from PA Projections])/[Numbers from PA Projections]), {{"Percentage Difference", Percentage.Type}}),
  #"Inserted rounding" = Table.AddColumn(#"Added custom 2", "Inserted rounding", each Number.Round([Percentage Difference], 2), Percentage.Type),
  #"Sorted rows 4" = Table.Sort(#"Inserted rounding", {{"Percentage Difference", Order.Ascending}}),
  #"Grouped rows 2" = Table.Group(#"Sorted rows 4", {"Inserted rounding"}, {{"Count", each Table.RowCount(_), Int64.Type}}),
  #"Sorted rows 7" = Table.Sort(#"Grouped rows 2", {{"Inserted rounding", Order.Ascending}})
in
  #"Sorted rows 7";
